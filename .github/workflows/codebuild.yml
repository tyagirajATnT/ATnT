name: CodeBuild Runner Setup

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  trigger-codebuild:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - uses: actions/checkout@v3
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: arn:aws:iam::813274479812:role/GithubATnTRole
        aws-region: us-east-1
    
    - name: Start CodeBuild
      id: start-build
      run: |
        BUILD_ID=$(aws codebuild start-build \
          --project-name GithubATnTPOC \
          --query 'build.id' \
          --output text)
        echo "build_id=$BUILD_ID" >> $GITHUB_OUTPUT
        echo "Started build with ID: $BUILD_ID"
    
    - name: Wait for Build Completion
      run: |
        BUILD_ID="${{ steps.start-build.outputs.build_id }}"
        echo "Waiting for build $BUILD_ID to complete..."
        
        while true; do
          STATUS=$(aws codebuild batch-get-builds \
            --ids "$BUILD_ID" \
            --query 'builds[0].buildStatus' \
            --output text)
          
          echo "Current build status: $STATUS"
          
          if [ "$STATUS" = "SUCCEEDED" ]; then
            echo "Build completed successfully!"
            break
          elif [ "$STATUS" = "FAILED" ] || [ "$STATUS" = "STOPPED" ] || [ "$STATUS" = "TIMED_OUT" ]; then
            echo "Build failed with status: $STATUS"
            aws codebuild batch-get-builds \
              --ids "$BUILD_ID" \
              --query 'builds[0].logs.deepLink' \
              --output text
            exit 1
          fi
          
          sleep 30
        done

    - name: Build Summary
      if: always()
      run: |
        BUILD_ID="${{ steps.start-build.outputs.build_id }}"
        echo "Build ID: $BUILD_ID"
        aws codebuild batch-get-builds \
          --ids "$BUILD_ID" \
          --query 'builds[0].[buildStatus,logs.deepLink]' \
          --output text
